{"name":"libraft","tagline":"Raft Distributed Consensus Protocol in Java","body":"### Overview\r\n\r\nlibraft is a Java library that implements the [Raft distributed consensus protocol]\r\n(https://ramcloud.stanford.edu/wiki/download/attachments/11370504/raft.pdf \"In Search of an Understandable Consensus Algorithm\"). It aims to be a correct, modular and understandable\r\nRaft implementation.\r\n\r\n### Features\r\n\r\nlibraft provides:\r\n\r\n* Leader election\r\n* Log replication\r\n\r\nAnd consists of 2 components:\r\n\r\n1. libraft-core\r\n2. libraft-agent\r\n\r\n#### libraft-core\r\n\r\nContains an implementation of the Raft algorithm. It also defines interfaces\r\nfor the components (such as timers, packet senders, storage, *etc*.) it needs\r\nto operate. These interfaces make very few assumptions and should be easy to implement\r\nusing any number of technologies.\r\n\r\nAn architecture diagram is shown below. Interfaces are in *italics* and implementations in **bold**. \r\n\r\n![libraft-core Architecture Diagram](http://libraft.io/images/libraft-core-architecture.png)\r\n\r\n#### libraft-agent\r\n\r\nTypically the component most applications will interact with. It provides a:\r\n\r\n1. Reference implementation for the interfaces defined in `libraft-core`.\r\n2. Facade over `libraft-core` that can be instantiated to provide distributed consensus.\r\n\r\nThe relationship between the libraft-* components is shown below.\r\nAgain, interfaces are in *italics* and implementations in **bold**. \r\n\r\n![libraft-agent Architecture Diagram](http://libraft.io/images/libraft-agent-architecture.png)\r\n\r\n#### Samples\r\n\r\nlibraft also comes with a fully-implemented sample application in `libraft-samples/kayvee`. *KayVee*\r\nis a distributed key-value store that uses `libraft-agent` to replicate key-value pairs to a cluster. It demonstrates how to integrate libraft into a server to provide distributed consensus.\r\n\r\nThe relationship between KayVee servers, clients and `libraft-agent` is shown below.\r\n\r\n![KayVee Cluster Diagram](http://libraft.io/images/kayvee-cluster.png)\r\n\r\n### Getting libraft\r\n\r\nlibraft is available through Maven Central: add `libraft-agent` as a dependency.\r\n\r\n**Gradle**\r\n\r\n```groovy\r\ndependencies {\r\n    compile 'io.libraft:libraft-agent:0.1.1'\r\n}\r\n```\r\n\r\n**Maven**\r\n\r\n```xml\r\n<dependencies>\r\n    <dependency>\r\n        <groupId>io.libraft</groupId>\r\n        <artifactId>libraft-agent</artifactId>\r\n        <version>0.1.1</version>\r\n    </dependency>\r\n</dependencies>\r\n```\r\n\r\n### Documentation\r\n\r\nIn addition to the [project README] (https://github.com/allengeorge/libraft/blob/master/README.md \"libraft README\"), libraft comes with javadoc:\r\n\r\n| Component     | Latest Version               |\r\n| ------------- |:----------------------------:|\r\n| libraft-core  | [0.1.1][libraft-core-0.1.1]  |\r\n| libraft-agent | [0.1.1][libraft-agent-0.1.1] |\r\n| kayvee        | [0.1.1][kayvee-0.1.1]        |\r\n\r\n### Getting in Touch\r\n\r\nPlease submit all code or documentation issues or feedback to\r\n[Github Issues] (https://github.com/allengeorge/libraft/issues \"libraft issues\").\r\n\r\nIf you have other libraft or Raft questions, please post to the\r\n[raft-dev] (https://groups.google.com/forum/#!forum/raft-dev \"raft-dev\")\r\nmailing list.\r\n\r\n[libraft-core-0.1.1]: http://libraft.io/javadoc/libraft-core/0.1.1 \"libraft-core javadoc - v0.1.1\"\r\n[libraft-agent-0.1.1]: http://libraft.io/javadoc/libraft-agent/0.1.1 \"libraft-agent javadoc - v0.1.1\"\r\n[kayvee-0.1.1]: http://libraft.io/javadoc/kayvee/0.1.1 \"kayvee javadoc - v0.1.1\"","google":"UA-46057097-1","note":"Don't delete this file! It's used internally to help with page regeneration."}